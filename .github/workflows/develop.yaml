name: Develop

on:
  push:
    branches: [feat/**]

env:
  CURRENT_SERVICE: ${{ github.event.repository.name }}
  AWS_ECR_URI: 604313529175.dkr.ecr.ap-southeast-1.amazonaws.com
  NAMESPACE: staging
  ZONE: ap-southeast-1
  CLUSTER_NAME: fewcha_remake
  AWS_ACCOUNT_ID: 604313529175

jobs:
  build_and_publish:
    name: Build And Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          version: "1.80.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/Bitsnap
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ZONE }}
          role-duration-seconds: 1200

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Release Build
        run: cargo build --release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Service docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: k8s/Dockerfile
          push: true
          tags: ${{ env.AWS_ECR_URI }}/${{ env.CURRENT_SERVICE }}:${{ env.NAMESPACE }}
          cache-from: type=registry,ref=${{ env.AWS_ECR_URI }}/${{ env.CURRENT_SERVICE }}:${{ env.NAMESPACE }}
          cache-to: type=inline

  rollout:
    name: Rollout Service
    runs-on: ubuntu-latest
    needs: build_and_publish
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ZONE }}

      - name: Config K8s credentials
        run: |-
          aws eks --region ${{ env.ZONE }} update-kubeconfig --name ${{ env.CLUSTER_NAME }} --role-arn arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/Bitsnap

      - name: Apply to K8S
        run: |-
          kubectl rollout restart -n utxo-global-${{ env.NAMESPACE }} deploy multi-sig-api
